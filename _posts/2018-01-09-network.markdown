---
layout:     post
title:      "初识网络"
subtitle:   " \"网络概括\""
date:       2018-01-09 23:40:45
author:     "faxiang1230"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
  - linux
  - network
---

# 网络概廓
第一次开始真正接触网络，开始动手搭建做一些事情，难免有误，敬请指正!

了解网络大概有2周多，我头脑中的网络应该需要了解哪些东西，怎么去深入理解它

- 1.网络基础
耳熟能详的网络模型是必备的，尽管TCP/IP是现在事实上的标准，但是很多术语仍然是使用ISO模型，有一些的分层概念仍然在借鉴其层次划分;  
物理层:真正负责传输信号的物理设备，例如光纤，双绞线，网卡，路由，交换机等设备，在物理介质中传输信号  
链路层:开始的时候很不解物理层和链路层的区别，同样都是传输信号为什么还有分为两层呢？我们直到物理层的信号很容易受到外界干扰，举个例子，数字信号是根据高低电平来区分0和1的，但是随着传输距离增长，电压下降，低于高电平阈值时就会产生信号错误，对端收到错误的信号之后解释的数据可能校验和出错，从而决定丢弃这个包;我们拆开USB传输线，2.0标准中是4根线，每根线除了包裹绝缘层还在外层缠绕了很多的铁丝，这个就是为了防止外界信号干扰；
链路层存在就很必要了，确保要传输的数据能够准确到达对端，上层不用关心传输的准确率问题；  
网络层:这个就是我们常说的IP层了，有了MAC地址为什么还要IP地址？每个网卡都有唯一的一个mac地址，为什么还需要IP地址呢？当网络内只有10台主机的时候很好说，广播一下就直到彼此的mac地址了,但是当主机到达100万台的时候还怎么直到彼此的位置呢？所以产生了IP地址，从逻辑上划分机器的地址；IP地址总共有A，B，C，D，E 5类地址，其中常接触的是A，B，C 3类地址，IP地址中有三种地址:网络号，子网号，主机号，为了从IP地址中知道这三种地址，还有一个网络掩码，`主机号=ip & ~mask`,网络号:`A类地址：1.0.0.0 - 126.0.0.0 B类地址:128.0.0.0-191.255.255.255 C类地址:192.0.0.0-223.255.255.255`，子网号:`网络号和主机号中间的一段就是子网号`。  
主机如何通信呢？  
如果是同一个网段中的，可以直接通过广播的形式知道所有的主机ip地址和对应的mac地址，然后在2层上就可以直接转发，代表设备就是2层交换机  
如果是不同网段，那就需要一个路由来进行不同网段间转发，如何知道怎么到达目的地址就是路由需要做的事情，通常我们只需要一个默认路由地址，它会帮助我们找到正确的路径  
除了路由到目的地址，IP层还需要做的是分片，主要是由于物理设备发送容量的限制，每一次网卡发送的最大数目我们称之为帧，IP层需要将数据划分为帧然后交给物理地址发送，接收的时候再次组装起来。  
传输层:我们通常直到的TCP/UDP，TCP是可靠的链接，最知名的就是三次握手，每一次会话之前先要握手，然后才开始真正通信，还回保证数据正确，无差错，不丢失，不重复，还要准时。而UDP是不可靠的链接，只保证尽最大能力发送，至于数据是否正确到达就不管了，正确性由更上层的协议来选择和实现.他们的应用场景也就有很大的区别:  
TCP:  
UDP:  
应用层:在传输层之上的统称为应用层，应用层也有很多的协议:http,ftp,telnet,snmp  
一个完整的以太网数据帧结构:
![image]()

理论的东西可以选择`TCP/IP 第一卷`  
如何更加直观的理解协议:可以通过cisco/华为的网络模拟软件来搭建环境，需要学会使用这些软件阿  

- 2.网络设备
常见的设备有:2层交换机，3层交换机，路由器，网桥  
怎么理解这些设备的用途:推荐使用网络模拟软件来搭建一些场景
- 3.Linux内核中网络的实现  
TCP/IP只是规范，还需要具体的实现才能真正影响，Linux内核的发展离不开网络，所以网络协议栈是非常核心的部分。  
体现为两方面:反应协议规范，反应Linux kernel的设备模型  
协议部分会实现TCP/IP中非常核心的协议:TCP/UDP,IP(4/6),ICMP,IGMP；路由虽然不是一个协议，但是作为网络中非常重要的部分还是值得单独列出来  
设备模型部分是要驱动网卡来发送数据，除了驱动之外还需要和内核沟通，熟知的软中断，内存分配等；  
而在物理设备之外还实现了一些虚拟设备来模拟真实物理设备的功能:tun/tap来模拟真实网卡，还有veth设备，bridge设备模拟网桥  

怎么去理解这些东西:先看框架性原理再仔细读code，没有别的招；在自己的机器上配置各种虚拟设备，熟悉Linux下的各种网络工具:ping,traceroute,telent,route,ifconfig,控制tun设备的tunctl,控制bridge设备的br,还有网卡工具ethtool,当然不能忘了抓包神器:tcpdump和wireshark
- 4.常用的协议
除了核心的协议之外，最近安全越来越受到重视，熟知的IPSec;还有我大天朝盛行的VPN系列，其中最著名的OPENVPN；

怎么取理解这些协议实现:1.先看前辈的经验总结 2.动手使用修改工具
