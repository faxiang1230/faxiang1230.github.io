---
layout:     post
title:      "程序员的价值"
subtitle:   "4年自我反思"
date:       2017-08-15 19:40:45
author:     "faxiang1230"
header-img: "img/post-bg-2015.jpg"
catalog: true
tags:
  - 价值观
  - 杂谈
---
# 程序员的价值何在
工作五年左右的时候都会有迷茫期，不知道未来怎么样，自己应该选择什么样的工作；坦率的说我也遇到了这些问题:程序员的价值何在？到底为什么值钱？值多少钱？
## 程序员的价值
程序员的工作通常都是产出软件或系统来交付，这些就是你的价值；你/(和team)创造出的软件能够帮助使用者提高效率或者吸引更过的用户使用，boss利用这些来达到盈利目的，所以一般程序员的工作到实际的金钱价值还有很远的距离，程序员通常无法估计自己在整个链中所占的比重；

硅谷创业之父 Paul Graham 在《黑客与画家》一书中写到:`程序员就是知识时代的手艺人，也是目前还存在的最大的手工艺人群体。`，确实程序员自嘲为农民工是很有道理的，程序员提供的技术类似于古代的手艺人`泥瓦匠，木匠`，只是一群手艺人；

那么我们怎么估算自己的价值呢？

外在的价值很难评估:假设能力可以评估为固定的grade，一个人在不同的公司会得到不同的薪水，同一个公司不同的时间薪水也会不同，受到公司的需求和社会的影响太大，无法准确评估应该得到的待遇；

内在的价值:一个人的工作成果只有得到利用才算是有效的工作，不然只是徒劳的产出，程序员的工作可能更加倾向于这种，不仅是过程，还需要尽量有结果；

外在的价值是内在价值的一种体现，但是不能完全反应，有些时候无法影响薪资类的收入，只能是提升自我的价值
## 怎么提升自己的价值
程序员的核心竞争力如下：

1. 整合现有资源的能力，什么时候造轮子，什么时候不造轮子，什么情况下利用公司自己的轮子，什么情况下利用开源的轮子。

2. 产品发展方向的规划能力，一个技术类的框架，产品，平台，需要程序员明确什么问题是要解决的，什么问题是不要解决的，产品相对其他竞争产品的优势在哪些方面。

3. debug能力，有了线上问题，可以一撸到底，无论问题在哪里，操作系统，文件系统，虚拟机，框架，等等，都可以定位问题所在。

4. 文档、pr能力，作出了产品，可以迅速了解优势所在并推广

5. 编码习惯，比如严谨的持续集成，测试样例先行，之所以说是习惯不是技巧，是因为好的编码习惯，可以持续为团队带来更大收益，而好的编码技巧没有那么大的效果。

以下为错误行为：

1. 长时间调研没结果，学习了很多框架，做法，无法认真对比优劣，这就是不能抓住核心的问题(技术方向)

2. 被需求牵着鼻子走，失去了产品的规划方向，或是走到哪算到哪，做出来的东西因为臃肿的需求越做越繁琐(产品把控方向)
